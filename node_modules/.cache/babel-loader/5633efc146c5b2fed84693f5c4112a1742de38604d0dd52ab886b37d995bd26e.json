{"ast":null,"code":"var _jsxFileName = \"D:\\\\play\\\\practice\\\\app\\\\src\\\\components\\\\Status\\\\Status.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"./Status.css\";\nimport { DataContext } from '../../DataContext/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const {\n    data,\n    ordering\n  } = useContext(DataContext);\n  const [sortedData, setSortedData] = useState([]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 21\n  }, this);\n  const status = [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Cancel\"];\n  useEffect(() => {\n    const sortedData = [...data];\n    if (ordering === 'title') {\n      sortedData.sort((a, b) => a.title.localeCompare(b.title));\n    } else {\n      sortedData.sort((a, b) => a.priority - b.priority);\n    }\n    setSortedData(sortedData);\n  }, [ordering, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Heading\",\n    children: status.map((statusItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: statusItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sortedData.filter(item => item.status === statusItem).map((item, idx) => {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-card\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 23\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Status, \"lk0oxvY2ionEkNLu3C08QKUdXH8=\");\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useContext","useEffect","useState","DataContext","jsxDEV","_jsxDEV","Status","_s","data","ordering","sortedData","setSortedData","children","fileName","_jsxFileName","lineNumber","columnNumber","status","sort","a","b","title","localeCompare","priority","className","map","statusItem","index","filter","item","idx","_c","$RefreshReg$"],"sources":["D:/play/practice/app/src/components/Status/Status.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport \"./Status.css\"\r\nimport { DataContext } from '../../DataContext/DataContext'\r\n\r\nconst Status = () => {\r\n  const {data,ordering} = useContext(DataContext);\r\n  const [sortedData, setSortedData] = useState([]);\r\n  if(!data) return (<div>Loading....</div>)\r\n  const status = [\"Backlog\",\"Todo\",\"In progress\",\"Done\",\"Cancel\"];\r\n  \r\n  useEffect(()=>{\r\n    const sortedData = [...data];\r\n    if(ordering==='title'){\r\n      sortedData.sort((a,b)=> a.title.localeCompare(b.title));\r\n    }\r\n    else{\r\n      sortedData.sort((a,b)=> a.priority-b.priority);\r\n    }\r\n    setSortedData(sortedData);\r\n  },[ordering,data])\r\n\r\n  return (\r\n    <div className='Heading'>\r\n      {\r\n        status.map((statusItem,index)=>(\r\n          <div className=\"status-column\">\r\n            <span>{statusItem}</span>\r\n            <div>\r\n              {\r\n                sortedData.filter(item=>item.status===statusItem).map((item,idx)=>{\r\n                  <div key={idx} className='status-card'>\r\n                      <p>{item.title}</p>\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Status"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAO,cAAc;AACrB,SAASC,WAAW,QAAQ,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAACC,IAAI;IAACC;EAAQ,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAG,CAACM,IAAI,EAAE,oBAAQH,OAAA;IAAAO,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACxC,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAC,MAAM,EAAC,aAAa,EAAC,MAAM,EAAC,QAAQ,CAAC;EAE/DhB,SAAS,CAAC,MAAI;IACZ,MAAMS,UAAU,GAAG,CAAC,GAAGF,IAAI,CAAC;IAC5B,IAAGC,QAAQ,KAAG,OAAO,EAAC;MACpBC,UAAU,CAACQ,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC,CAAC;IACzD,CAAC,MACG;MACFX,UAAU,CAACQ,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,CAACI,QAAQ,GAACH,CAAC,CAACG,QAAQ,CAAC;IAChD;IACAZ,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC,EAAC,CAACD,QAAQ,EAACD,IAAI,CAAC,CAAC;EAElB,oBACEH,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAZ,QAAA,EAEpBK,MAAM,CAACQ,GAAG,CAAC,CAACC,UAAU,EAACC,KAAK,kBAC1BtB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAZ,QAAA,gBAC5BP,OAAA;QAAAO,QAAA,EAAOc;MAAU;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBX,OAAA;QAAAO,QAAA,EAEIF,UAAU,CAACkB,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACZ,MAAM,KAAGS,UAAU,CAAC,CAACD,GAAG,CAAC,CAACI,IAAI,EAACC,GAAG,KAAG;UAChE,aAAAzB,OAAA;YAAemB,SAAS,EAAC,aAAa;YAAAZ,QAAA,eAClCP,OAAA;cAAAO,QAAA,EAAIiB,IAAI,CAACR;YAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC,GADbc,GAAG;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CAAC;QACR,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAT,EAAA,CArCKD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAuCZ,eAAeA,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}