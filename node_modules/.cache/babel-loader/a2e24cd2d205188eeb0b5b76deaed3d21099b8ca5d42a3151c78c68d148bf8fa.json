{"ast":null,"code":"var _jsxFileName = \"D:\\\\play\\\\practice\\\\app\\\\src\\\\components\\\\Status\\\\Status.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"./Status.css\";\nimport { DataContext } from '../../DataContext/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const {\n    data,\n    ordering\n  } = useContext(DataContext);\n  const status = [\"Backlog\", \"Todo\", \"In Progress\", \"Done\", \"Cancelled\"];\n  const tickets = data.tickets;\n  useEffect(() => {\n    if (ordering === 'title') {\n      tickets.sort((a, b) => a.localeCompare(b));\n    } else {\n      tickets.sort((a, b) => a.priority - b.priority);\n    }\n  }, [ordering, tickets]);\n  if (data.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Heading\",\n    children: status.map((statusItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: statusItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tickets.filter(ticket => ticket.status === statusItem).map((item, idx) => {\n          /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.title, \" \", item.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Status, \"jUd1Xz3SUwYHD6413YOM1iqZTwI=\");\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useContext","useEffect","useState","DataContext","jsxDEV","_jsxDEV","Status","_s","data","ordering","status","tickets","sort","a","b","localeCompare","priority","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","statusItem","index","filter","ticket","item","idx","title","_c","$RefreshReg$"],"sources":["D:/play/practice/app/src/components/Status/Status.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport \"./Status.css\"\r\nimport { DataContext } from '../../DataContext/DataContext'\r\n\r\nconst Status = () => {\r\n  const {data,ordering} = useContext(DataContext);\r\n  const status = [\"Backlog\",\"Todo\",\"In Progress\",\"Done\",\"Cancelled\"];\r\n  const tickets = data.tickets;\r\n  useEffect(()=>{\r\n    if(ordering==='title'){\r\n      tickets.sort((a,b)=> a.localeCompare(b));\r\n    }\r\n    else{\r\n      tickets.sort((a,b)=> a.priority-b.priority);\r\n    }\r\n  },[ordering,tickets])\r\n  if(data.length===0) return (<div>Loading....</div>);\r\n\r\n  return (\r\n    <div className='Heading'>\r\n      {\r\n        status.map((statusItem,index)=>(\r\n          <div className=\"status-column\">\r\n            <span>{statusItem}</span>\r\n            <div>\r\n              {\r\n                tickets.filter(ticket => ticket.status===statusItem).map((item,idx)=>{\r\n                  <p>{item.title} {item.priority}</p>\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Status"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAO,cAAc;AACrB,SAASC,WAAW,QAAQ,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAACC,IAAI;IAACC;EAAQ,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAMO,MAAM,GAAG,CAAC,SAAS,EAAC,MAAM,EAAC,aAAa,EAAC,MAAM,EAAC,WAAW,CAAC;EAClE,MAAMC,OAAO,GAAGH,IAAI,CAACG,OAAO;EAC5BV,SAAS,CAAC,MAAI;IACZ,IAAGQ,QAAQ,KAAG,OAAO,EAAC;MACpBE,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;IAC1C,CAAC,MACG;MACFH,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,CAACG,QAAQ,GAACF,CAAC,CAACE,QAAQ,CAAC;IAC7C;EACF,CAAC,EAAC,CAACP,QAAQ,EAACE,OAAO,CAAC,CAAC;EACrB,IAAGH,IAAI,CAACS,MAAM,KAAG,CAAC,EAAE,oBAAQZ,OAAA;IAAAa,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,SAAS;IAAAL,QAAA,EAEpBR,MAAM,CAACc,GAAG,CAAC,CAACC,UAAU,EAACC,KAAK,kBAC1BrB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5Bb,OAAA;QAAAa,QAAA,EAAOO;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBjB,OAAA;QAAAa,QAAA,EAEIP,OAAO,CAACgB,MAAM,CAACC,MAAM,IAAIA,MAAM,CAAClB,MAAM,KAAGe,UAAU,CAAC,CAACD,GAAG,CAAC,CAACK,IAAI,EAACC,GAAG,KAAG;UACnE,aAAAzB,OAAA;YAAAa,QAAA,GAAIW,IAAI,CAACE,KAAK,EAAC,GAAC,EAACF,IAAI,CAACb,QAAQ;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QACrC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAf,EAAA,CAhCKD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAkCZ,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}