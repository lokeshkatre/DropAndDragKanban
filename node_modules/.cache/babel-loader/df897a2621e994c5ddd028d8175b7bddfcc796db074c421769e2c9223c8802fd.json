{"ast":null,"code":"var _jsxFileName = \"D:\\\\play\\\\practice\\\\app\\\\src\\\\DataContext\\\\DataContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [ordering, setOrdering] = useState(\"status\");\n  const [grouping, setGrouping] = useState(\"title\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const contextValue = {\n    data,\n    ordering,\n    setOrdering\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(DataProvider, \"P+OZbtqRQFZznxe8/Bsz3/7C44A=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","data","setData","ordering","setOrdering","grouping","setGrouping","fetchData","response","fetch","ok","Error","status","result","json","err","console","log","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/play/practice/app/src/DataContext/DataContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = ({children}) => {\r\n    const [data, setData] = useState(null);\r\n    const [ordering,setOrdering] = useState(\"status\");\r\n    const [grouping,setGrouping] = useState(\"title\");\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async ()=>{\r\n            try{\r\n                const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\r\n                if(!response.ok){\r\n                    throw new Error(`Error: ${response.status}`);\r\n                }\r\n                const result = await response.json();\r\n                setData(result);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n     },[])\r\n\r\n     const contextValue = {\r\n        data,\r\n        ordering,\r\n        setOrdering,\r\n\r\n     }\r\n\r\n     return (\r\n        <DataContext.Provider value = {contextValue}>\r\n            {children}\r\n        </DataContext.Provider>\r\n     )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EACjD,MAAM,CAACW,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAGhDD,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAU;MACxB,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;QACxF,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;UACZ,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAChD;QACA,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACpCZ,OAAO,CAACW,MAAM,CAAC;MACnB,CAAC,QAAME,GAAG,EAAC;QACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC;IACDR,SAAS,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMW,YAAY,GAAG;IAClBjB,IAAI;IACJE,QAAQ;IACRC;EAEH,CAAC;EAED,oBACGR,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAIF,YAAa;IAAAnB,QAAA,EACvCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAxB,EAAA,CAlCYF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}